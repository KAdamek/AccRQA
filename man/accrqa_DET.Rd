% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RAccRQA.R
\name{accrqa_DET}
\alias{accrqa_DET}
\title{Calculate Determinism for Cross-Recurrence Quantification Analysis}
\usage{
accrqa_DET(
  input,
  tau_values,
  emb_values,
  lmin_values,
  threshold_values,
  norm,
  calc_ENTR,
  platform
)
}
\arguments{
\item{input}{A numeric matrix or data frame representing the input data for CRQA analysis.}

\item{tau_values}{A numeric vector specifying the time delay(s) to be used in the analysis.}

\item{emb_values}{A numeric vector specifying the embedding dimensions to be tested.}

\item{lmin_values}{A numeric vector specifying the minimum diagonal line lengths for DET computation.}

\item{threshold_values}{A numeric vector specifying the threshold values for recurrence computation.}

\item{norm}{A character string specifying the normalization method to be used. Options may include
\code{"euclidean"}, \code{"maximal"}, etc.}

\item{calc_ENTR}{A logical value indicating whether to calculate entropy (ENTR) along with DET.}

\item{comp_platform}{A character string specifying the computing platform. Options may include
\code{"cpu"}, \code{"nv_gpu"}, etc.}
}
\value{
A list containing:
\itemize{
\item \code{DET}: The determinism values computed for the given input parameters.
\item \code{ENTR} (if \code{calc_ENTR = TRUE}): The entropy values corresponding to the DET computations.
}
}
\description{
This function calculates the determinism (DET) for cross-recurrence quantification analysis (CRQA)
based on a set of input parameters, including time delay, embedding dimensions, minimum line length,
threshold values, and normalization.
}
\details{
The function performs cross-recurrence quantification analysis (CRQA) using the specified parameters.
DET measures the proportion of recurrent points forming diagonal lines in the recurrence plot,
which indicates deterministic structures in the data. If \code{calc_ENTR} is \code{TRUE}, the entropy of diagonal
line lengths is also computed.
}
\examples{
# Example usage
input_data <- matrix(runif(100), nrow = 10)
tau <- c(1, 2)
emb <- c(2, 3)
lmin <- 1
threshold <- 1
norm_method <- "euclidean"
calculate_entropy <- TRUE
comp_platform <- "cpu"

results <- accrqa_DET(
  input = input_data,
  tau_values = tau,
  emb_values = emb,
  lmin_values = lmin,
  threshold_values = threshold,
  norm = norm_method,
  calc_ENTR = calculate_entropy,
  platform = comp_platform
)

}
